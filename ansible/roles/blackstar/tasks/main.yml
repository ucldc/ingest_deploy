---
# tasks file for blackstar
- name: include vaulted passwords
  include_vars: ./roles/common/vars/all_secrets.yml
- name: get correct urls for environment
  include_vars:  "./roles/worker/vars/main{{ name_suffix }}.yml"
- name: get vaulted passwords & URLs for environment
  include_vars:  "./roles/worker/vars/vaulted.yml"
- name: get environment specific
  include_vars: "./group_vars/{{ data_branch }}"
- name: put profile in place, to unset PYTHON_INSTALL_LAYOUT
  copy:
    src: .bash_profile
    dest: "/home/{{ role_user }}/.bash_profile"
- name: put harvester environment vars file in place
  template:
    src: ./roles/worker/templates/harvester-env.j2
    dest: "/home/{{ role_user }}/.harvester-env"
- name: set .ssh dir
  file:
    state: directory
    mode: 0700
    dest: ~/.ssh
- name: put ingest-private.pem in place
  template:
    src: ingest-private.pem.j2
    dest: "/home/{{ role_user }}/.ssh/ingest-private.pem"
    mode: 0400
- name: put ssh config in place
  template:
    src: ssh_config
    dest: "/home/{{ role_user }}/.ssh/config"
    mode: 0400
- name: put ansible hosts file in place for data_branch
  template:
    src: hosts.j2
    dest: "/home/{{ role_user }}/hosts"
- name: install ansible
  pip:
    name: ansible
    state: present
    virtualenv: "/home/{{ role_user }}/python2"
- name: make ~/tmp for working directory
  file:
    state: directory
    mode: 0755
    dest: ~/tmp
- name: check if harvester already installed
  stat:
    path: "/home/{{ role_user }}/python2/lib/python2.7/site-packages/UCLDC_Harvester-0.8.1-py2.7.egg"
  register: harvester_egg
- name: install harvester code
  include: install_harvester.yml
#  when: harvester_egg.stat.exists == False
- name: check if redis helper installed
  stat:
    path: "/home/{{ role_user}}/bin/redis.sh"
  register: redis_helper
- name: install redis client
  include: install_redis.yml
  when: redis_helper.stat.exists == False
- name: make user ~/bin directory
  file:
    path: "/home/{{ role_user }}/bin"
    state: directory
- name: put log helpers in place
  copy:
    src: ../logs_from_cli/
    dest: "/home/{{ role_user }}/bin"
    mode: 0700
- name: install ansible playbooks and suporting files
  include: install_ansible_playbooks.yml
- name: remove temporary working directory
  file:
    path: "/home/{{ role_user}}/tmp"
    state: absent
