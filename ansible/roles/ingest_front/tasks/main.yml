---
###- name: get ip of couchdb #this was for vagrant
###  shell: cat /ip-couchdb
###  register: ip_couchdb
###- name: get ip of solr
###  shell: cat /ip-solr
###  register: ip_solr
- include_vars: digest_auth_users.yml
- name: copy access key for private machines
  become: no
  copy:
    src: ~/.ssh/ingest-west-2.pem
    dest: ~/.ssh/ingest-west-2.pem
    force: no
    mode: 0600
- name: make ingest key default
  become: no
  lineinfile:
    dest: ~/.ssh/config
    line: IdentityFile ~/.ssh/ingest-west-2.pem
    state: present
    mode: 0600
    backup: yes
    create: yes
- name: install mod_ssl
  yum: pkg=mod_ssl state=present
- name: install httpd
  yum: pkg=httpd state=present
- name: get httpd version
  shell: httpd -v | head -1 | sed -n 's/.*Apache\/\([0-9].[0-9]\).*/\1/p'
  register: httpd_version
- debug: msg="HTTPD VERSION -- {{ httpd_version.stdout }}"
- name: add ssl rewrite/forwarding conf
  template: src=ssl.conf dest=/etc/httpd/conf.d/ssl.conf
- name: remove port 80
  lineinfile: dest=/etc/httpd/conf/httpd.conf state=absent line="Listen 80"
- name: get public ip
  command: curl   http://169.254.169.254/latest/meta-data/public-ipv4
  register: pub_ip
- name: make certs directory
  file:
    state: directory
    path: /etc/httpd/certs
- name: create self signed certificate
  command: openssl req -new -nodes -x509 -subj "/C=US/ST=CA/L=Oakland/O=DSC/CN={{pub_ip.stdout}}" -days 3650 -keyout /etc/httpd/certs/server.key.nopass -out /etc/httpd/certs/server.crt -extensions v3_ca
  args:
    creates: /etc/httpd/certs/server.crt
- name: start apache
  service: name=httpd enabled=yes state=started
- name: put authorized_users file in place
  template:
    src: users.digest
    dest: /etc/httpd/conf.d/users.digest
  notify:
    - restart apache
# setup stunnel to access redis from registry
- name: install stunnel
  yum: pkg=stunnel state=present
- name: put stunnel.conf
  template: 
    src: stunnel.conf.j2
    dest: /etc/stunnel/stunnel.conf
- name: read in the ssl pem from encrypted file
  include_vars: stunnel.pem.yml
- name: put pem in place, NOTE -  pem is vaulted
  template:
    src: stunnel.pem.j2
    dest: /etc/stunnel/stunnel.pem
    mode: 0500
- name: put init.d script in place
  copy:
    src: stunnel.init.d
    dest: /etc/init.d/stunnel
    mode: 0744
- name: chkconfig stunnel to run at boot
  command: chkconfig --add stunnel
- name: start stunnel in daemon mode
  command: /etc/init.d/stunnel start
- name: put bootstrap for majorTom in place
  become: no
  copy:
    src: bootstrap_majorTom.sh
    dest: ~/bootstrap_majorTom.sh
    mode: 0755
- name: run rq-dashboard docker
  docker: 
    #docker_api_version: docker_server_api_version.stdout
    state: running
    restart_policy: always
    image: mredar/rq-dashboard
    name: rq-dashboard
    ports: "9181:9181"
    command: /run.sh ports=9181
    env: "REDIS_HOST={{ redis_host }}" #,REDIS_PSWD={{ REDIS_PSWD }}"
